name: Enforce release semantic version

on:
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  enforce-semantic-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest stable release tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v0.0.0"
          fi
          # Remove the "v" prefix
          LATEST_TAG=${LATEST_TAG#v}
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Get version from package.json
        id: get_package_version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        run: |
          LATEST_TAG=${{ env.LATEST_TAG }}
          PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}

          # Convert versions to comparable numbers
          convert_version() {
            echo "$1" | awk -F. '{ printf("%d%03d%03d", $1,$2,$3); }'
          }

          LATEST_TAG_NUM=$(convert_version $LATEST_TAG)
          PACKAGE_VERSION_NUM=$(convert_version $PACKAGE_VERSION)

          if [ "$PACKAGE_VERSION_NUM" -le "$LATEST_TAG_NUM" ]; then
            echo "Version in package.json ($PACKAGE_VERSION) is not greater than the latest release tag ($LATEST_TAG), please update it to match the next release."
            exit 1
          fi

      - name: Success message
        if: success()
        run: echo "Version in package.json ($PACKAGE_VERSION) is greater than the latest release tag ($LATEST_TAG). Ready to merge to main!"